# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'c3b26cc3-3d3a-476f-a188-2c23b684ecbb'
  imageRepository: 'innboxweb'
  containerRegistry: 'innboxdev.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $yamlPath = "$(System.DefaultWorkingDirectory)/KubernetesManifest/innboxAzure.yml"
          
          $newImage = "innboxdev.azurecr.io/innboxweb:v$(Build.BuildId)"
          
          $yamlContent = Get-Content -Path $yamlPath -Raw
          
          $yamlContent = $yamlContent -replace '\[IMAGE_INNBOXWEB\]', "$newImage"
          
          $yamlContent | Set-Content -Path $yamlPath
          write-host "$yamlContent"
          
          echo "$yamlContent"
        pwsh: true
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/KubernetesManifest'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'